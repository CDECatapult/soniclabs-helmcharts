apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "testmanager.fullname" . }}-app
  labels:
    {{- include "testmanager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.config.replicaCount }}
  selector:
    matchLabels:
      {{- include "testmanager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      {{- if .Values.config.commonAnnotations }}
      {{- toYaml .Values.config.commonAnnotations | nindent 6 }}
      {{- end }}
      labels:
        {{- include "testmanager.labels" . | nindent 8 }}
    spec:
      {{- include "testmanager.imagePullSecrets" . | indent 6 }}
      initContainers:
        - name: {{ include "testmanager.fullname" . }}-db-init
          image: {{ template "testmanager.image" .Values.image }}
          command: ['npx', 'knex', 'migrate:latest', '--knexfile', 'build/lib/db/knexfile.js']
          env:
            - name: DB_HOST
              value: {{ include "testmanager.postgresql.fullname" . }}
            - name: DB_PORT
              value: {{ .Values.postgresql.primary.service.ports.postgresql | quote }}
            - name: DB_NAME
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "testmanager.fullname" . }}-secret
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "testmanager.fullname" . }}-secret
                  key: DB_PASSWORD
      containers:
        - name: {{ include "testmanager.fullname" . }}-app
          image: {{ template "testmanager.image" .Values.image }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.config.appPort }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.config.appPort }}
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.config.appPort }}
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 3
          env:
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel | quote }}
            - name: PORT
              value: {{ .Values.config.appPort | quote }}
            - name: DB_HOST
              value: {{ include "testmanager.postgresql.fullname" . }}
            - name: DB_PORT
              value: {{ .Values.postgresql.primary.service.ports.postgresql | quote }}
            - name: DB_NAME
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: SUITE_HOST
              value: {{ .Values.config.sma.host | quote }}
            - name: SUITE_PORT
              value: {{ .Values.config.sma.port | quote }}
            - name: CONFIG_HOST
              value: {{ .Values.config.cma.host | quote }}
            - name: CONFIG_PORT
              value: {{ .Values.config.cma.port | quote }}
            - name: RESULTS_HOST
              value: {{ .Values.config.rma.host | quote }}
            - name: RESULTS_PORT
              value: {{ .Values.config.rma.port | quote }}
            - name: DEPLOY_HOST
              value: {{ .Values.config.dma.host | quote }}
            - name: DEPLOY_PORT
              value: {{ .Values.config.dma.port | quote }}
            - name: CONTROL_HOST
              value: {{ .Values.config.controlHost | quote }}
            - name: CONTROL_SHARENAME
              value: {{ .Values.config.controlShare | quote }}
            - name: RTC_PORT
              value: {{ .Values.config.rtcPort | quote }}
            - name: TMA_PATH
              value: {{ .Values.config.tmaPath | quote }}
            - name: SSH_KEY_PATH
              value: /etc/ssh/oran-component-key/ssh-privatekey
            - name: PCAP_STORAGE_PATH
              value: {{ .Values.config.pcapStoragePath | quote }}
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "testmanager.fullname" . }}-secret
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "testmanager.fullname" . }}-secret
                  key: DB_PASSWORD
            - name: CONTROL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "testmanager.fullname" . }}-secret
                  key: CONTROL_USERNAME
            - name: CONTROL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "testmanager.fullname" . }}-secret
                  key: CONTROL_PASSWORD
          volumeMounts:
            - name: ssh-key
              mountPath: /etc/ssh/oran-component-key
              readOnly: true
            - name: pcap-storage
              mountPath: {{ .Values.config.pcapStorage.path }}
          volumes:
            - name: ssh-key
              secret:
                secretName: {{ include "testmanager.fullname" . }}-ssh-key
            - name: pcap-storage
              persistentVolumeClaim:
                claimName: {{ include "testmanager.fullname" . }}-pcap-storage
